[{"/home/mate/Advanced/hangman-using-redux/src/index.js":"1","/home/mate/Advanced/hangman-using-redux/src/App.js":"2","/home/mate/Advanced/hangman-using-redux/src/components/Header.js":"3","/home/mate/Advanced/hangman-using-redux/src/components/Content.js":"4","/home/mate/Advanced/hangman-using-redux/src/context/VocabularyContext.js":"5","/home/mate/Advanced/hangman-using-redux/src/context/GameStatusContext.js":"6","/home/mate/Advanced/hangman-using-redux/src/context/DrawingContext.js":"7","/home/mate/Advanced/hangman-using-redux/src/context/LettersContext.js":"8","/home/mate/Advanced/hangman-using-redux/src/components/Game.js":"9","/home/mate/Advanced/hangman-using-redux/src/components/Vocabulary.js":"10","/home/mate/Advanced/hangman-using-redux/src/components/Drawing.js":"11","/home/mate/Advanced/hangman-using-redux/src/components/GameEndingFeedback.js":"12","/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetters.js":"13","/home/mate/Advanced/hangman-using-redux/src/components/letters/GuessedLetter.js":"14","/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetters.js":"15","/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetter.js":"16","/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetter.js":"17","/home/mate/Advanced/hangman-using-redux/src/app/store.js":"18","/home/mate/Advanced/hangman-using-redux/src/features/vocabulary/vocabularySlice.js":"19","/home/mate/Advanced/hangman-using-redux/src/features/wordsSlice.js":"20","/home/mate/Advanced/hangman-using-redux/src/features/gameStatusSlice.js":"21","/home/mate/Advanced/hangman-using-redux/src/features/letters/correctLettersSlice.js":"22","/home/mate/Advanced/hangman-using-redux/src/features/letters/wrongLettersSlice.js":"23","/home/mate/Advanced/hangman-using-redux/src/features/letters/lastlyGuessedLetterSlice.js":"24"},{"size":292,"mtime":1609926411105,"results":"25","hashOfConfig":"26"},{"size":1050,"mtime":1609858891245,"results":"27","hashOfConfig":"26"},{"size":1210,"mtime":1609858891245,"results":"28","hashOfConfig":"26"},{"size":614,"mtime":1609858891245,"results":"29","hashOfConfig":"26"},{"size":1291,"mtime":1610355978665,"results":"30","hashOfConfig":"26"},{"size":1143,"mtime":1610357861735,"results":"31","hashOfConfig":"26"},{"size":518,"mtime":1609858891245,"results":"32","hashOfConfig":"26"},{"size":2922,"mtime":1610361512889,"results":"33","hashOfConfig":"26"},{"size":1370,"mtime":1609858891245,"results":"34","hashOfConfig":"26"},{"size":2597,"mtime":1609931971463,"results":"35","hashOfConfig":"26"},{"size":4698,"mtime":1610357963336,"results":"36","hashOfConfig":"26"},{"size":1785,"mtime":1610357451687,"results":"37","hashOfConfig":"26"},{"size":741,"mtime":1610360677731,"results":"38","hashOfConfig":"26"},{"size":1963,"mtime":1609925966280,"results":"39","hashOfConfig":"26"},{"size":1114,"mtime":1610359929193,"results":"40","hashOfConfig":"26"},{"size":477,"mtime":1609858891245,"results":"41","hashOfConfig":"26"},{"size":836,"mtime":1609858891245,"results":"42","hashOfConfig":"26"},{"size":779,"mtime":1610361811636,"results":"43","hashOfConfig":"26"},{"size":414,"mtime":1609929889183,"results":"44","hashOfConfig":"26"},{"size":696,"mtime":1610355166819,"results":"45","hashOfConfig":"26"},{"size":594,"mtime":1610356602330,"results":"46","hashOfConfig":"26"},{"size":411,"mtime":1610360612262,"results":"47","hashOfConfig":"26"},{"size":489,"mtime":1610361085610,"results":"48","hashOfConfig":"26"},{"size":440,"mtime":1610361718153,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"u7h8ov",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mate/Advanced/hangman-using-redux/src/index.js",[],["103","104"],"/home/mate/Advanced/hangman-using-redux/src/App.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Header.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Content.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/VocabularyContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/GameStatusContext.js",["105"],"import React, {useState, useContext} from 'react';\nimport {VocabularyContext} from './VocabularyContext';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {setIsPlayerWon, setIsEndOfGame} from '../features/gameStatusSlice';\nexport const GameStatusContext = React.createContext();\n\nexport const GameStatusProvider = (props) => {\n\n    // const [isEndOfGame, setIsEndOfGame] = useState(false);\n    const isEndOfGame = useSelector(state => state.gameStatus.isEndOfGame);\n    // const [isPlayerWon, setIsPlayerWon] = useState(false);\n    const isPlayerWon = useSelector(state => state.gameStatus.isPlayerWon);\n\n    const {generateWord} = useContext(VocabularyContext);\n\n    const dispatch = useDispatch();\n\n    const startNewGame = (e) => {\n        dispatch(setIsEndOfGame(false));\n        dispatch(setIsPlayerWon(false));\n        generateWord(e);\n    }\n\n    return (\n        <GameStatusContext.Provider value={{\n            isEndOfGame,\n            setIsEndOfGame, \n            isPlayerWon, \n            setIsPlayerWon,\n            startNewGame, \n        }}>\n            {props.children}\n        </GameStatusContext.Provider>\n    );\n};","/home/mate/Advanced/hangman-using-redux/src/context/DrawingContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/LettersContext.js",["106"],"/home/mate/Advanced/hangman-using-redux/src/components/Game.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Vocabulary.js",["107"],"import React, {useContext, useEffect} from 'react';\nimport {VocabularyContext} from '../context/VocabularyContext';\nimport styled from 'styled-components';\nimport englishFlag from '../images/english_flag.png';\nimport germanFlag from '../images/german_flag.png';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setWordBeforeVisitingVocabularies} from '../features/wordsSlice';\n\nconst Vocabulary = () => {\n\n\n    const {generateWord, vocabulary} = useContext(VocabularyContext);\n    const generatedWord = useSelector(state => state.words.generatedWord);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(setWordBeforeVisitingVocabularies(generatedWord));\n    }, [])\n\n\n    useEffect(() => {\n    }, [vocabulary])\n\n    return (\n        <StyleWrapper>\n            <div id=\"chosen-vocabulary\" className=\"vocabulary-container\">\n                <h2>Chosen vocabulary: {vocabulary}</h2>\n            </div>\n            <div id=\"available-vocabularies\" className=\"vocabulary-container\">\n                <h2>Available vocabularies:</h2>\n                <button type=\"button\" className=\"flag-button\"  onClick={generateWord}>\n                    <StyledFlag src={englishFlag} alt=\"English vocabulary\" data-vocabulary=\"English\"></StyledFlag>\n                </button>\n                <button type=\"button\" className=\"flag-button\" onClick={generateWord}>\n                    <StyledFlag src={germanFlag} alt=\"German vocabulary\" data-vocabulary=\"German\"></StyledFlag>\n                </button>\n            </div>\n        </StyleWrapper>\n    );\n};\n\nexport default Vocabulary;\n\n\nconst StyledFlag = styled.img`\n    width: 160px;\n    height: 80px;\n    cursor: pointer;\n    border: 0;\n\n    @media screen and (min-width: 768px) {\n        \n    }\n`;\n\nconst StyleWrapper = styled.div`\n    width: 100%;\n    background-color: #383961;\n    display: flex;\n    flex-direction: column;\n\n    .vocabulary-container {\n        margin: 5%;\n    }\n\n    h2 {\n        margin-top: 5%;\n    }\n\n    #available-vocabularies {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    \n    @media screen and (min-width: 540px) {\n        font-size: 120%;\n        .vocabulary-container {\n            margin: 5%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n    }    \n    \n    @media screen and (min-width: 992px) {\n        font-size: 150%;\n        .vocabulary-container {\n            margin: 0;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n    }\n`;\n","/home/mate/Advanced/hangman-using-redux/src/components/Drawing.js",["108","109","110","111"],"import React, {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {DrawingContext} from '../context/DrawingContext';\nimport {LettersContext} from '../context/LettersContext';\nimport {useLocation} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {setIsEndOfGame} from '../features/gameStatusSlice';\nimport {useDispatch} from 'react-redux';\n\nconst Drawing = () => {\n\n\n    const generatedWord = useSelector(state => state.words.generatedWord);\n    const wordBeforeVisitingVocabularies = useSelector(state => state.words.wordBeforeVisitingVocabularies);\n    const isEndOfGame = useSelector(state => state.gameStatus.isEndOfGame);\n    const dispatch = useDispatch();\n    const {drawingParts, indexOfDrawingParts, \n        setIndexOfDrawingParts} = useContext(DrawingContext);\n    const {wrongLetters, isLastlyGuessedLetterWrong, \n        setIsLastlyGuessedLetterWrong} = useContext(LettersContext);\n\n    let location = useLocation();\n    let currentPath = location.pathname;\n\n    useEffect(() => {\n        return () => {\n            setIsLastlyGuessedLetterWrong(false);\n        }\n    }, [])\n    \n\n    useEffect(() => {\n        draw();\n    }, [drawingParts, wrongLetters, isLastlyGuessedLetterWrong, \n        isEndOfGame, setIsEndOfGame, setIsLastlyGuessedLetterWrong])\n\n    const draw = () => {\n        if (!isEndOfGame && isLastlyGuessedLetterWrong) {\n            drawingParts[indexOfDrawingParts].classList.add(\"draw\");\n            if (drawingParts[indexOfDrawingParts + 1] === undefined) {\n                dispatch(setIsEndOfGame(true));\n                setIsLastlyGuessedLetterWrong(false);\n            } else {\n                setIndexOfDrawingParts(index => index + 1);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n\n        clearDrawing();\n    }, [generatedWord])\n\n    const clearDrawing = () => {\n        console.log(generatedWord)\n        console.log(wordBeforeVisitingVocabularies)\n        if (wordBeforeVisitingVocabularies !== generatedWord) {\n            for (let i = 0; i < drawingParts.length; i++) {\n                drawingParts[i].classList.remove(\"draw\");\n            setIndexOfDrawingParts(0);\n            }\n        }\n    }\n    \n\n    useEffect(() => {\n        redraw();\n    }, [currentPath])\n\n    const redraw = () => {\n        if (currentPath === \"/\" && wordBeforeVisitingVocabularies === generatedWord) {\n            for (let i = 0; i < indexOfDrawingParts; i++) {\n                drawingParts[i].classList.add(\"draw\");\n            }\n            setIndexOfDrawingParts(indexOfDrawingParts);\n        }\n    } \n\n\n    return <StyleWrapper id=\"drawing\" className=\"styled-div\">\n                <svg height=\"250\" width=\"100%\" id=\"drawing-parts\">\n                    <g id=\"gallows\">\n                        <line x1=\"10\" y1=\"230\" x2=\"270\" y2=\"230\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"230\" x2=\"100\" y2=\"20\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"20\" x2=\"200\" y2=\"20\" className=\"drawing-part\"/>\n                        <line id=\"rope\" x1=\"200\" y1=\"20\" x2=\"200\" y2=\"60\" className=\"drawing-part\"/>\n                    </g>\n                    <g id=\"body\">\n                        <circle cx=\"200\" cy=\"80\" r=\"20\" stroke=\"white\" strokeWidth=\"4\" fill=\"white\" className=\"drawing-part\"/>\n                        <line x1=\"200\" y1=\"100\" x2=\"200\" y2=\"150\" className=\"drawing-part\"/>\n                        <line id=\"armL\" x1=\"200\" y1=\"120\" x2=\"170\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"armR\" x1=\"200\" y1=\"120\" x2=\"230\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"legL\" x1=\"200\" y1=\"150\" x2=\"180\" y2=\"190\" className=\"drawing-part\"/>\n                        <line id=\"legR\" x1=\"200\" y1=\"150\" x2=\"220\" y2=\"190\" className=\"drawing-part\"/>\n                    </g>\n                </svg>\n    </StyleWrapper>\n}\n\nexport default Drawing;\n\nconst StyleWrapper = styled.div`\n    flex: 5;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    margin: 3% 0;\n\n    svg {\n        margin: 0 auto;\n    }\n    \n    line {\n        stroke: white;\n        stroke-width: 4;\n    }\n\n    .drawing-part {\n        visibility: hidden;\n    }\n    \n    .draw {\n        visibility: visible;\n    }\n\n    @media screen and (min-width: 540px) {\n        svg {\n            box-sizing: content-box;\n            width: 50%;\n            padding: 10% 0 0 20%;\n        }\n    }\n\n    @media screen and (min-width: 992px) {\n        border-top: none;\n        border-bottom: none;\n        position: relative;\n\n        svg {\n            box-sizing: content-box;\n            width: 50%;\n            padding: 15% 0 0 40%;\n        }\n    }\n`;","/home/mate/Advanced/hangman-using-redux/src/components/GameEndingFeedback.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetters.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/GuessedLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetters.js",["112"],"import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {v4 as uuidv4} from 'uuid';\nimport CorrectLetter from './CorrectLetter';\nimport {setIsPlayerWon, setIsEndOfGame} from '../../features/gameStatusSlice';\nimport {useDispatch, useSelector} from 'react-redux';\n\nconst CorrectLetters = () => {\n\n    const correctLetters = useSelector(state => state.correctLetters)\n    const dispatch = useDispatch();\n\n    \n\n    useEffect(() => {\n        console.log(correctLetters)\n        if (!correctLetters.includes(null) && correctLetters.length !== 0) {\n            dispatch(setIsEndOfGame(true));\n            dispatch(setIsPlayerWon(true));\n        }\n    }, [correctLetters, setIsEndOfGame, setIsPlayerWon])    \n    \n\n    return (\n    <StyleWrapper id=\"correct-letters\" className=\"styled-div\">\n        {correctLetters.map(letter => \n            <CorrectLetter key={uuidv4()} letter={letter}/> \n            )}  \n    </StyleWrapper>\n    )\n}\n\nexport default CorrectLetters;\n\nconst StyleWrapper = styled.div`\n    flex: 4;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/app/store.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/vocabulary/vocabularySlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/wordsSlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/gameStatusSlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/letters/correctLettersSlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/letters/wrongLettersSlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/letters/lastlyGuessedLetterSlice.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":51,"column":8,"nodeType":"123","endLine":51,"endColumn":23,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":18,"column":8,"nodeType":"123","endLine":18,"endColumn":10,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":29,"column":8,"nodeType":"123","endLine":29,"endColumn":10,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":34,"column":8,"nodeType":"123","endLine":35,"endColumn":68,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"131","line":53,"column":8,"nodeType":"123","endLine":53,"endColumn":23,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"133","line":69,"column":8,"nodeType":"123","endLine":69,"endColumn":21,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":21,"column":8,"nodeType":"123","endLine":21,"endColumn":56,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'dispatch' and 'generatedWord'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'setIsLastlyGuessedLetterWrong'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array. Outer scope values like 'setIsEndOfGame' aren't valid dependencies because mutating them doesn't re-render the component.",["142"],"React Hook useEffect has a missing dependency: 'clearDrawing'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'redraw'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'setIsEndOfGame' aren't valid dependencies because mutating them doesn't re-render the component.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [dispatch, generatedWord]",{"range":"159","text":"160"},{"range":"161","text":"160"},"Update the dependencies array to be: [setIsLastlyGuessedLetterWrong]",{"range":"162","text":"163"},"Update the dependencies array to be: [drawingParts, wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, setIsLastlyGuessedLetterWrong, draw]",{"range":"164","text":"165"},"Update the dependencies array to be: [clearDrawing, generatedWord]",{"range":"166","text":"167"},"Update the dependencies array to be: [currentPath, redraw]",{"range":"168","text":"169"},"Update the dependencies array to be: [correctLetters, dispatch]",{"range":"170","text":"171"},[2377,2392],"[dispatch, generatedWord]",[699,701],[1142,1144],"[setIsLastlyGuessedLetterWrong]",[1197,1322],"[drawingParts, wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, setIsLastlyGuessedLetterWrong, draw]",[1817,1832],"[clearDrawing, generatedWord]",[2259,2272],"[currentPath, redraw]",[679,727],"[correctLetters, dispatch]"]