[{"/home/mate/Advanced/hangman-using-redux/src/index.js":"1","/home/mate/Advanced/hangman-using-redux/src/App.js":"2","/home/mate/Advanced/hangman-using-redux/src/components/Header.js":"3","/home/mate/Advanced/hangman-using-redux/src/components/Content.js":"4","/home/mate/Advanced/hangman-using-redux/src/context/VocabularyContext.js":"5","/home/mate/Advanced/hangman-using-redux/src/context/GameStatusContext.js":"6","/home/mate/Advanced/hangman-using-redux/src/context/DrawingContext.js":"7","/home/mate/Advanced/hangman-using-redux/src/context/LettersContext.js":"8","/home/mate/Advanced/hangman-using-redux/src/components/Game.js":"9","/home/mate/Advanced/hangman-using-redux/src/components/Vocabulary.js":"10","/home/mate/Advanced/hangman-using-redux/src/components/Drawing.js":"11","/home/mate/Advanced/hangman-using-redux/src/components/GameEndingFeedback.js":"12","/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetters.js":"13","/home/mate/Advanced/hangman-using-redux/src/components/letters/GuessedLetter.js":"14","/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetters.js":"15","/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetter.js":"16","/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetter.js":"17","/home/mate/Advanced/hangman-using-redux/src/app/store.js":"18","/home/mate/Advanced/hangman-using-redux/src/features/vocabulary/vocabularySlice.js":"19","/home/mate/Advanced/hangman-using-redux/src/features/wordsSlice.js":"20"},{"size":292,"mtime":1609926411105,"results":"21","hashOfConfig":"22"},{"size":1050,"mtime":1609858891245,"results":"23","hashOfConfig":"22"},{"size":1210,"mtime":1609858891245,"results":"24","hashOfConfig":"22"},{"size":614,"mtime":1609858891245,"results":"25","hashOfConfig":"22"},{"size":1279,"mtime":1609932074455,"results":"26","hashOfConfig":"22"},{"size":797,"mtime":1609858891245,"results":"27","hashOfConfig":"22"},{"size":518,"mtime":1609858891245,"results":"28","hashOfConfig":"22"},{"size":2671,"mtime":1609932086059,"results":"29","hashOfConfig":"22"},{"size":1370,"mtime":1609858891245,"results":"30","hashOfConfig":"22"},{"size":2597,"mtime":1609931971463,"results":"31","hashOfConfig":"22"},{"size":4451,"mtime":1609858891245,"results":"32","hashOfConfig":"22"},{"size":1618,"mtime":1609858891245,"results":"33","hashOfConfig":"22"},{"size":763,"mtime":1609858891245,"results":"34","hashOfConfig":"22"},{"size":1963,"mtime":1609925966280,"results":"35","hashOfConfig":"22"},{"size":1086,"mtime":1609858891245,"results":"36","hashOfConfig":"22"},{"size":477,"mtime":1609858891245,"results":"37","hashOfConfig":"22"},{"size":836,"mtime":1609858891245,"results":"38","hashOfConfig":"22"},{"size":296,"mtime":1609929898375,"results":"39","hashOfConfig":"22"},{"size":414,"mtime":1609929889183,"results":"40","hashOfConfig":"22"},{"size":696,"mtime":1609930790603,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u7h8ov",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mate/Advanced/hangman-using-redux/src/index.js",[],["84","85"],"/home/mate/Advanced/hangman-using-redux/src/App.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Header.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Content.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/VocabularyContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/GameStatusContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/DrawingContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/context/LettersContext.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Game.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/Vocabulary.js",["86"],"/home/mate/Advanced/hangman-using-redux/src/components/Drawing.js",["87","88","89","90"],"import React, {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {VocabularyContext} from '../context/VocabularyContext';\nimport {GameStatusContext} from '../context/GameStatusContext';\nimport {DrawingContext} from '../context/DrawingContext';\nimport {LettersContext} from '../context/LettersContext';\nimport {useLocation} from 'react-router-dom';\n\nconst Drawing = () => {\n\n    const {generatedWord, wordBeforeVisitingVocabularies} = useContext(VocabularyContext);\n    const {isEndOfGame, setIsEndOfGame} = useContext(GameStatusContext);\n    const {drawingParts, indexOfDrawingParts, \n        setIndexOfDrawingParts} = useContext(DrawingContext);\n    const {wrongLetters, isLastlyGuessedLetterWrong, \n        setIsLastlyGuessedLetterWrong} = useContext(LettersContext);\n\n    let location = useLocation();\n    let currentPath = location.pathname;\n\n    useEffect(() => {\n        return () => {\n            setIsLastlyGuessedLetterWrong(false);\n        }\n    }, [])\n    \n\n    useEffect(() => {\n        draw();\n    }, [drawingParts, wrongLetters, isLastlyGuessedLetterWrong, \n        isEndOfGame, setIsEndOfGame, setIsLastlyGuessedLetterWrong])\n\n    const draw = () => {\n        if (!isEndOfGame && isLastlyGuessedLetterWrong) {\n            drawingParts[indexOfDrawingParts].classList.add(\"draw\");\n            if (drawingParts[indexOfDrawingParts + 1] === undefined) {\n                setIsEndOfGame(true);\n                setIsLastlyGuessedLetterWrong(false);\n            } else {\n                setIndexOfDrawingParts(index => index + 1);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        clearDrawing();\n    }, [generatedWord])\n\n    const clearDrawing = () => {\n        if (wordBeforeVisitingVocabularies !== generatedWord) {\n            for (let i = 0; i < drawingParts.length; i++) {\n                drawingParts[i].classList.remove(\"draw\");\n            setIndexOfDrawingParts(0);\n            }\n        }\n    }\n    \n\n    useEffect(() => {\n        redraw();\n    }, [currentPath])\n\n    const redraw = () => {\n        if (currentPath === \"/\" && wordBeforeVisitingVocabularies === generatedWord) {\n            for (let i = 0; i < indexOfDrawingParts; i++) {\n                drawingParts[i].classList.add(\"draw\");\n            }\n            setIndexOfDrawingParts(indexOfDrawingParts);\n        }\n    } \n\n\n    return <StyleWrapper id=\"drawing\" className=\"styled-div\">\n                <svg height=\"250\" width=\"100%\" id=\"drawing-parts\">\n                    <g id=\"gallows\">\n                        <line x1=\"10\" y1=\"230\" x2=\"270\" y2=\"230\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"230\" x2=\"100\" y2=\"20\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"20\" x2=\"200\" y2=\"20\" className=\"drawing-part\"/>\n                        <line id=\"rope\" x1=\"200\" y1=\"20\" x2=\"200\" y2=\"60\" className=\"drawing-part\"/>\n                    </g>\n                    <g id=\"body\">\n                        <circle cx=\"200\" cy=\"80\" r=\"20\" stroke=\"white\" strokeWidth=\"4\" fill=\"white\" className=\"drawing-part\"/>\n                        <line x1=\"200\" y1=\"100\" x2=\"200\" y2=\"150\" className=\"drawing-part\"/>\n                        <line id=\"armL\" x1=\"200\" y1=\"120\" x2=\"170\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"armR\" x1=\"200\" y1=\"120\" x2=\"230\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"legL\" x1=\"200\" y1=\"150\" x2=\"180\" y2=\"190\" className=\"drawing-part\"/>\n                        <line id=\"legR\" x1=\"200\" y1=\"150\" x2=\"220\" y2=\"190\" className=\"drawing-part\"/>\n                    </g>\n                </svg>\n    </StyleWrapper>\n}\n\nexport default Drawing;\n\nconst StyleWrapper = styled.div`\n    flex: 5;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    margin: 3% 0;\n\n    svg {\n        margin: 0 auto;\n    }\n    \n    line {\n        stroke: white;\n        stroke-width: 4;\n    }\n\n    .drawing-part {\n        visibility: hidden;\n    }\n    \n    .draw {\n        visibility: visible;\n    }\n\n    @media screen and (min-width: 540px) {\n        svg {\n            box-sizing: content-box;\n            width: 50%;\n            padding: 10% 0 0 20%;\n        }\n    }\n\n    @media screen and (min-width: 992px) {\n        border-top: none;\n        border-bottom: none;\n        position: relative;\n\n        svg {\n            box-sizing: content-box;\n            width: 50%;\n            padding: 15% 0 0 40%;\n        }\n    }\n`;","/home/mate/Advanced/hangman-using-redux/src/components/GameEndingFeedback.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetters.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/GuessedLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetters.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/WrongLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/components/letters/CorrectLetter.js",[],"/home/mate/Advanced/hangman-using-redux/src/app/store.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/vocabulary/vocabularySlice.js",[],"/home/mate/Advanced/hangman-using-redux/src/features/wordsSlice.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":18,"column":8,"nodeType":"97","endLine":18,"endColumn":10,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":25,"column":8,"nodeType":"97","endLine":25,"endColumn":10,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"101","line":30,"column":8,"nodeType":"97","endLine":31,"endColumn":68,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":48,"column":8,"nodeType":"97","endLine":48,"endColumn":23,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"105","line":62,"column":8,"nodeType":"97","endLine":62,"endColumn":21,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'generatedWord'. Either include them or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'setIsLastlyGuessedLetterWrong'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'clearDrawing'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'redraw'. Either include it or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [dispatch, generatedWord]",{"range":"124","text":"125"},"Update the dependencies array to be: [setIsLastlyGuessedLetterWrong]",{"range":"126","text":"127"},"Update the dependencies array to be: [drawingParts, wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, setIsEndOfGame, setIsLastlyGuessedLetterWrong, draw]",{"range":"128","text":"129"},"Update the dependencies array to be: [clearDrawing, generatedWord]",{"range":"130","text":"131"},"Update the dependencies array to be: [currentPath, redraw]",{"range":"132","text":"133"},[699,701],"[dispatch, generatedWord]",[993,995],"[setIsLastlyGuessedLetterWrong]",[1048,1173],"[drawingParts, wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, setIsEndOfGame, setIsLastlyGuessedLetterWrong, draw]",[1657,1672],"[clearDrawing, generatedWord]",[2012,2025],"[currentPath, redraw]"]